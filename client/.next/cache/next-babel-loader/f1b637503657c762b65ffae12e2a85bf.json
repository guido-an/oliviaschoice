{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/pages/prodotto/[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useContext, useEffect, useState } from 'react';\nimport { CartContext } from '../../contexts/CartContext';\nimport { ProductContext } from '../../contexts/ProductContext';\n\nvar Product = function Product() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id; // Destructuring our router object\n\n  var _useContext = useContext(CartContext),\n      addToCart = _useContext.addToCart,\n      productsInCart = _useContext.productsInCart;\n\n  var _useContext2 = useContext(ProductContext),\n      getSingleProduct = _useContext2.getSingleProduct,\n      singleProduct = _useContext2.singleProduct;\n\n  useEffect(function () {\n    document.getElementById('quantity').value = 1;\n\n    function fetchProduct() {\n      return _fetchProduct.apply(this, arguments);\n    }\n\n    function _fetchProduct() {\n      _fetchProduct = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getSingleProduct(id);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchProduct.apply(this, arguments);\n    }\n\n    fetchProduct();\n  }, [id]);\n\n  var exceedQuantity = function exceedQuantity(product) {\n    console.log('exced', document.getElementById('quantity').value, product.boughtQuantity);\n\n    if (document.getElementById('quantity').value >= product.boughtQuantity) {\n      console.log('ttoo much');\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Product page\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, singleProduct && singleProduct.name), __jsx(\"input\", {\n    onChange: function onChange() {\n      return exceedQuantity(singleProduct);\n    },\n    id: \"quantity\",\n    type: \"number\",\n    min: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return addToCart(singleProduct, document.getElementById('quantity').value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Add to cart\"));\n};\n\n_s(Product, \"sI0+oJ3WDwHRmo4MosqMuAV3t9o=\", false, function () {\n  return [useRouter];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/pages/prodotto/[id].js"],"names":["useRouter","useContext","useEffect","useState","CartContext","ProductContext","Product","router","id","query","addToCart","productsInCart","getSingleProduct","singleProduct","document","getElementById","value","fetchProduct","exceedQuantity","product","console","log","boughtQuantity","name"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,cAAT,QAA+B,+BAA/B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AADoB,MAEZQ,EAFY,GAELD,MAAM,CAACE,KAFF,CAEZD,EAFY,EAES;;AAFT,oBAGkBP,UAAU,CAACG,WAAD,CAH5B;AAAA,MAGZM,SAHY,eAGZA,SAHY;AAAA,MAGDC,cAHC,eAGDA,cAHC;;AAAA,qBAIwBV,UAAU,CAACI,cAAD,CAJlC;AAAA,MAIZO,gBAJY,gBAIZA,gBAJY;AAAA,MAIMC,aAJN,gBAIMA,aAJN;;AAMnBX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,GAA4C,CAA5C;;AADc,aAEEC,YAFF;AAAA;AAAA;;AAAA;AAAA,+EAEb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQL,gBAAgB,CAACJ,EAAD,CADxB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFa;AAAA;AAAA;;AAKbS,IAAAA,YAAY;AACb,GANO,EAML,CAACT,EAAD,CANK,CAAT;;AAQC,MAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAAzD,EAAgEG,OAAO,CAACG,cAAxE;;AACA,QAAGR,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,IAA6CG,OAAO,CAACG,cAAxD,EAAuE;AACrEF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF,GALD;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,aAAa,IAAIA,aAAa,CAACU,IAAnC,CAFF,EAGE;AAAO,IAAA,QAAQ,EAAE;AAAA,aAAML,cAAc,CAACL,aAAD,CAApB;AAAA,KAAjB;AAAsD,IAAA,EAAE,EAAC,UAAzD;AAAoE,IAAA,IAAI,EAAC,QAAzE;AAAkF,IAAA,GAAG,EAAC,GAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMH,SAAS,CAACG,aAAD,EAAgBC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApD,CAAf;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CADF;AAQD,CA9BH;;GAAMV,O;UACWN,S;;;KADXM,O;AAiCN,eAAeA,OAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useContext, useEffect, useState } from 'react'\nimport { CartContext } from '../../contexts/CartContext'\nimport { ProductContext } from '../../contexts/ProductContext'\n\nconst Product = () => {\n  const router = useRouter();\n  const { id } = router.query; // Destructuring our router object\n  const { addToCart, productsInCart } = useContext(CartContext)\n  const { getSingleProduct, singleProduct } = useContext(ProductContext)\n\n   useEffect(() => {\n     document.getElementById('quantity').value = 1\n      async function fetchProduct () {\n        await getSingleProduct(id)\n      }\n      fetchProduct()\n    }, [id])\n   \n    const exceedQuantity = (product) => {\n      console.log('exced', document.getElementById('quantity').value, product.boughtQuantity)\n      if(document.getElementById('quantity').value >= product.boughtQuantity){\n        console.log('ttoo much')\n      }\n    }\n    \n  \n    return (\n      <div>\n        <h1>Product page</h1>\n        <p>{singleProduct && singleProduct.name}</p>\n        <input onChange={() => exceedQuantity(singleProduct)} id=\"quantity\" type=\"number\" min=\"0\"></input>\n        <button onClick={() => addToCart(singleProduct, document.getElementById('quantity').value)}>Add to cart</button>\n      </div>\n    )\n  }\n\n\nexport default Product\n  "]},"metadata":{},"sourceType":"module"}