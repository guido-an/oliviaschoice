{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, useState } from 'react';\nimport { CartContext } from '../contexts/CartContext';\nimport { UserContext } from '../contexts/UserContext';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n});\n\nconst Checkout = () => {\n  const {\n    totalPrice,\n    productsInCart\n  } = useContext(CartContext);\n  const {\n    user\n  } = useContext(UserContext);\n  const router = useRouter();\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    firstName: '',\n    lastName: '',\n    VAT: '',\n    streetAddress: '',\n    city: '',\n    province: '',\n    zipCode: '',\n    telephone: '',\n    email: '',\n    additionalNotes: ''\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const createOder = await createOrder();\n      debugger;\n      router.push('/pagamento');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createOrder = async () => {\n    const shippingInfo = {\n      firstName: form.firstName || user.firstName,\n      lastName: form.lastName || user.lastName,\n      VAT: form.VAT || user.VAT,\n      streetAddress: form.streetAddress || user.shippingInfo && user.shippingInfo.streetAddress,\n      city: form.city || user.shippingInfo && user.shippingInfo.city,\n      province: '',\n      zipCode: form.zipCode || user.shippingInfo && user.shippingInfo.zipCode,\n      telephone: form.telephone || user.telephone,\n      email: form.email || user.email,\n      additionalNotes: form.additionalNotes\n    };\n    const response = await service.post('/create-order', {\n      shippingInfo: shippingInfo,\n      totalPrice,\n      paid: false,\n      productsInCart\n    });\n    desbugger;\n    const orderId = response.data.orderId;\n    localStorage.setItem('orderId', orderId); // So later if the order succeed we can update it to paid: true\n  };\n\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Checkout\"), __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"label\", null, \"Nome\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: user && user.firstName,\n    required: !(user && user.firstName),\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      firstName: e.target.value\n    }))\n  }), __jsx(\"label\", null, \"Cognome\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: user && user.lastName,\n    required: !(user && user.lastName),\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      lastName: e.target.value\n    }))\n  }), __jsx(\"label\", null, \"P.IVA/Codice fiscale\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: user && user.VAT,\n    required: !(user && user.VAT),\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      VAT: e.target.value\n    }))\n  }), __jsx(\"label\", null, \"Indirizzo\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: user && user.shippingInfo && user.shippingInfo.streetAddress,\n    required: !(user && user.shippingInfo && user.shippingInfo.streetAddress),\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      streetAddress: e.target.value\n    }))\n  }), __jsx(\"label\", null, \"Citt\\xE0\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: user && user.shippingInfo && user.shippingInfo.city,\n    required: !(user && user.shippingInfo && user.shippingInfo.city),\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      city: e.target.value\n    }))\n  }), __jsx(\"label\", null, \"Provincia\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: user && user.shippingInfo && user.shippingInfo.province,\n    required: !(user && user.shippingInfo && user.shippingInfo.province),\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      province: e.target.value\n    }))\n  }), __jsx(\"label\", null, \"Zip code\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: user && user.shippingInfo && user.shippingInfo.zipCode,\n    required: !(user && user.shippingInfo && user.shippingInfo.zipCode),\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      zipCode: e.target.value\n    }))\n  }), __jsx(\"label\", null, \"Telefono\"), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: user && user.telephone,\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      telephone: e.target.value\n    }))\n  }), __jsx(\"label\", null, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    placeholder: user && user.email,\n    required: !(user && user.email),\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      email: e.target.value\n    }))\n  }), __jsx(\"label\", null, \"Note aggiuntive\"), __jsx(\"input\", {\n    type: \"textarea\",\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      additionalNotes: e.target.value\n    }))\n  }), __jsx(\"button\", null, \"Prosegui al pagamento\")));\n};\n\nexport default Checkout;","map":null,"metadata":{},"sourceType":"module"}