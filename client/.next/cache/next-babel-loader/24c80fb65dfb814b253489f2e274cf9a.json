{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nvar service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n}); // const checkIfAdmin = async () => {\n//   const router = useRouter()\n//   try {\n//     const res = await service.get('/admin/get-admin')\n//     if (res.data.admin) {\n//       return true\n//     } else {\n//       router.push('/')\n//     }\n//   } catch (e) {\n//     console.log(e)\n//   }\n// }\n\nvar checkIfAdmin = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var router, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            router = useRouter();\n            _context.prev = 2;\n            _context.next = 5;\n            return service.get('/admin/get-admin');\n\n          case 5:\n            res = _context.sent;\n\n            if (!res.data.admin) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", 'test');\n\n          case 10:\n            router.push('/');\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 13]]);\n  }), \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n    return [useRouter];\n  }));\n\n  return function checkIfAdmin() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default checkIfAdmin;","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/helpers/checkIfAdmin.js"],"names":["axios","useRouter","service","create","baseURL","process","env","APP_API","withCredentials","checkIfAdmin","router","get","res","data","admin","push","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADM;AAE3BC,EAAAA,eAAe,EAAE;AAFU,CAAb,CAAhB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,YAAY;AAAA;;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACbC,YAAAA,MADa,GACJT,SAAS,EADL;AAAA;AAAA;AAAA,mBAGCC,OAAO,CAACS,GAAR,CAAY,kBAAZ,CAHD;;AAAA;AAGXC,YAAAA,GAHW;;AAAA,iBAIbA,GAAG,CAACC,IAAJ,CAASC,KAJI;AAAA;AAAA;AAAA;;AAAA,6CAKR,MALQ;;AAAA;AAOfJ,YAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;;AAPe;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUjBC,YAAAA,OAAO,CAACC,GAAR;;AAViB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YACDhB,SADC;AAAA;;AAAA,kBAAZQ,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAcA,eAAeA,YAAf","sourcesContent":["import axios from 'axios'\nimport { useRouter } from 'next/router'\n\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n})\n\n// const checkIfAdmin = async () => {\n//   const router = useRouter()\n//   try {\n//     const res = await service.get('/admin/get-admin')\n//     if (res.data.admin) {\n//       return true\n//     } else {\n//       router.push('/')\n//     }\n//   } catch (e) {\n//     console.log(e)\n//   }\n// }\n\nconst checkIfAdmin = async () => {\n  const router = useRouter()\n  try {\n    const res = await service.get('/admin/get-admin')\n    if (res.data.admin) {\n      return 'test'\n    } else {\n      router.push('/')\n    }\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport default checkIfAdmin\n"]},"metadata":{},"sourceType":"module"}