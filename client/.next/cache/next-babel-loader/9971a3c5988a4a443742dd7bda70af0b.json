{"ast":null,"code":"var _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/pages/carrello.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect, useState } from 'react';\nimport { CartContext } from '../contexts/CartContext';\nimport Link from 'next/link';\n\nconst Carrello = () => {\n  let {\n    updateCart,\n    productsInCart,\n    setProductsInCart\n  } = useContext(CartContext);\n  const {\n    0: totalPrice,\n    1: setTotalPrice\n  } = useState(0);\n  useEffect(() => {\n    if (!productsInCart) {\n      setProductsInCart(productsInCart = []);\n    }\n\n    productsInCart.forEach(product => {\n      document.getElementById(product._id).value = product.boughtQuantity;\n    });\n    calculateTotalPrice();\n  }, [productsInCart, totalPrice]);\n\n  const removeProduct = product => {\n    const updateArray = productsInCart.filter(element => {\n      return element._id !== product._id;\n    });\n    setProductsInCart(updateArray);\n  };\n\n  const calculateTotalPrice = () => {\n    let sumPrice = 0;\n    productsInCart.forEach(product => {\n      sumPrice += product.boughtQuantity * product.price;\n    });\n    setTotalPrice(sumPrice);\n  };\n\n  const exceedQuantity = singleProduct => {\n    if (document.getElementById(singleProduct._id).value > singleProduct.effectiveStock) {\n      document.getElementById('checkout-btn').disabled = true;\n      document.getElementById(`${singleProduct._id}-msg`).innerHTML = `Sono rimaste ${singleProduct.effectiveStock} unità di questo prodotto`;\n    } else {\n      document.getElementById('checkout-btn').disabled = false;\n      document.getElementById(`${singleProduct._id}-msg`).innerHTML = '';\n    }\n  };\n\n  const inputUpdate = product => {\n    updateCart(product, document.getElementById(product._id).value);\n    exceedQuantity(product);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Carrello\"), productsInCart && productsInCart.map(product => {\n    return __jsx(\"div\", {\n      key: product._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"/prodotto/[id]\",\n      as: `/prodotto/${encodeURIComponent(product._id)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, product.name)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    }, \"Prezzo: \"), \"\\u20AC \", product.price), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    }, \"Subtotale: \"), \"\\u20AC \", product.price * product.boughtQuantity), __jsx(\"input\", {\n      onChange: () => inputUpdate(product),\n      type: \"number\",\n      id: product._id,\n      min: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), __jsx(\"button\", {\n      onClick: () => removeProduct(product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"x\"), __jsx(\"p\", {\n      id: `${product._id}-msg`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }\n    }));\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Total price: \", totalPrice), __jsx(Link, {\n    id: \"checkout-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Concludi ordine\"));\n};\n\nexport default Carrello;","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/pages/carrello.js"],"names":["useContext","useEffect","useState","CartContext","Link","Carrello","updateCart","productsInCart","setProductsInCart","totalPrice","setTotalPrice","forEach","product","document","getElementById","_id","value","boughtQuantity","calculateTotalPrice","removeProduct","updateArray","filter","element","sumPrice","price","exceedQuantity","singleProduct","effectiveStock","disabled","innerHTML","inputUpdate","map","encodeURIComponent","name"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport { CartContext } from '../contexts/CartContext'\nimport Link from 'next/link'\n\nconst Carrello = () => {\n  let { updateCart, productsInCart, setProductsInCart } = useContext(CartContext)\n  const [totalPrice, setTotalPrice] = useState(0)\n\n  useEffect(() => {\n    if (!productsInCart) {\n      setProductsInCart(productsInCart = [])\n    }\n    productsInCart.forEach(product => {\n      document.getElementById(product._id).value = product.boughtQuantity\n    })\n    calculateTotalPrice()\n  }, [productsInCart, totalPrice])\n\n  const removeProduct = product => {\n    const updateArray = productsInCart.filter(element => {\n      return element._id !== product._id\n    })\n    setProductsInCart(updateArray)\n  }\n\n  const calculateTotalPrice = () => {\n    let sumPrice = 0\n    productsInCart.forEach(product => {\n      sumPrice += product.boughtQuantity * product.price\n    })\n    setTotalPrice(sumPrice)\n  }\n\n  const exceedQuantity = singleProduct => {\n    if (document.getElementById(singleProduct._id).value > singleProduct.effectiveStock) {\n      document.getElementById('checkout-btn').disabled = true\n      document.getElementById(`${singleProduct._id}-msg`).innerHTML = `Sono rimaste ${singleProduct.effectiveStock} unità di questo prodotto`\n    } else {\n      document.getElementById('checkout-btn').disabled = false\n      document.getElementById(`${singleProduct._id}-msg`).innerHTML = ''\n    }\n  }\n\n  const inputUpdate = (product) => {\n    updateCart(product, document.getElementById(product._id).value)\n    exceedQuantity(product)\n  }\n\n  return (\n    <div>\n      <h1>Carrello</h1>\n      {productsInCart && productsInCart.map(product => {\n        return (\n          <div key={product._id}>\n            <Link href='/prodotto/[id]' as={`/prodotto/${encodeURIComponent(product._id)}`}>\n              <p>{product.name}</p>\n            </Link>\n            <p><strong>Prezzo: </strong>€ {product.price}</p>\n            <p><strong>Subtotale: </strong>€ {product.price * product.boughtQuantity}</p>\n            <input onChange={() => inputUpdate(product)} type='number' id={product._id} min='1' />\n            <button onClick={() => removeProduct(product)}>x</button>\n            {<p id={`${product._id}-msg`} />}\n          </div>\n        )\n      })}\n      <h2>Total price: {totalPrice}</h2>\n      <Link id='checkout-btn'>Concludi ordine</Link>\n    </div>\n  )\n}\nexport default Carrello\n"]},"metadata":{},"sourceType":"module"}