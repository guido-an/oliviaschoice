{"ast":null,"code":"var _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/pages/pagamento.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport CheckoutForm from '../components/CheckoutForm';\nimport { useContext, useEffect, useState } from 'react';\nimport { CartContext } from '../contexts/CartContext';\nimport { UserContext } from '../contexts/UserContext';\nimport axios from 'axios';\nimport Link from 'next/link'; // Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// loadStripe is initialized with a fake API key.\n// Sign in to see examples pre-filled with your key.\n\nconst promise = loadStripe(process.env.STRIPE_PK);\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n});\n\nconst Pagamento = () => {\n  const {\n    productsInCart,\n    shippingInfo,\n    totalPrice,\n    calculateTotalPrice\n  } = useContext(CartContext);\n  const {\n    user\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function createOrder() {\n      await service.post('/create-order', {\n        user: user._id\n      });\n    }\n\n    createOrder();\n    calculateTotalPrice();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Pagamento: \", totalPrice), __jsx(Elements, {\n    stripe: promise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(CheckoutForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Pagamento;","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/pages/pagamento.js"],"names":["loadStripe","Elements","CheckoutForm","useContext","useEffect","useState","CartContext","UserContext","axios","Link","promise","process","env","STRIPE_PK","service","create","baseURL","APP_API","withCredentials","Pagamento","productsInCart","shippingInfo","totalPrice","calculateTotalPrice","user","createOrder","post","_id"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAGV,UAAU,CAACW,OAAO,CAACC,GAAR,CAAYC,SAAb,CAA1B;AAEA,MAAMC,OAAO,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEL,OAAO,CAACC,GAAR,CAAYK,OADM;AAE3BC,EAAAA,eAAe,EAAE;AAFU,CAAb,CAAhB;;AAKA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA,UAAhC;AAA4CC,IAAAA;AAA5C,MAAoEpB,UAAU,CAACG,WAAD,CAApF;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAWrB,UAAU,CAACI,WAAD,CAA3B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeqB,WAAf,GAA8B;AAC5B,YAAMX,OAAO,CAACY,IAAR,CAAa,eAAb,EAA8B;AAClCF,QAAAA,IAAI,EAAEA,IAAI,CAACG;AADuB,OAA9B,CAAN;AAGD;;AACDF,IAAAA,WAAW;AACXF,IAAAA,mBAAmB;AACpB,GARQ,EAQN,EARM,CAAT;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBD,UAAhB,CADF,EAEE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEZ,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD,CArBD;;AAsBA,eAAeS,SAAf","sourcesContent":["import { loadStripe } from '@stripe/stripe-js'\nimport { Elements } from '@stripe/react-stripe-js'\nimport CheckoutForm from '../components/CheckoutForm'\nimport { useContext, useEffect, useState } from 'react'\nimport { CartContext } from '../contexts/CartContext'\nimport { UserContext } from '../contexts/UserContext'\nimport axios from 'axios'\nimport Link from 'next/link'\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// loadStripe is initialized with a fake API key.\n// Sign in to see examples pre-filled with your key.\nconst promise = loadStripe(process.env.STRIPE_PK)\n\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n})\n\nconst Pagamento = () => {\n  const { productsInCart, shippingInfo, totalPrice, calculateTotalPrice } = useContext(CartContext)\n  const { user } = useContext(UserContext)\n  useEffect(() => {\n    async function createOrder () {\n      await service.post('/create-order', {\n        user: user._id\n      })\n    }\n    createOrder()\n    calculateTotalPrice()\n  }, [])\n\n  return (\n    <div>\n      <h1>Pagamento: {totalPrice}</h1>\n      <Elements stripe={promise}>\n        <CheckoutForm />\n      </Elements>\n    </div>\n  )\n}\nexport default Pagamento\n"]},"metadata":{},"sourceType":"module"}