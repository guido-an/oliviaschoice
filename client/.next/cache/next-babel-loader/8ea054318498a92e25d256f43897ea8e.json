{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/pages/carrello.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect, useState } from 'react';\nimport { CartContext } from '../contexts/CartContext';\n\nvar Carrello = function Carrello() {\n  _s();\n\n  var _useContext = useContext(CartContext),\n      updateCart = _useContext.updateCart,\n      productsInCart = _useContext.productsInCart,\n      setProductsInCart = _useContext.setProductsInCart;\n\n  var _useState = useState(0),\n      totalPrice = _useState[0],\n      setTotalPrice = _useState[1];\n\n  useEffect(function () {\n    productsInCart.forEach(function (product) {\n      document.getElementById(product._id).value = product.boughtQuantity;\n    });\n    calculateTotalPrice();\n  }, [productsInCart]);\n\n  var removeProduct = function removeProduct(product) {\n    var updateArray = productsInCart.filter(function (element) {\n      return element._id !== product._id;\n    });\n    setProductsInCart(updateArray);\n  };\n\n  var calculateTotalPrice = function calculateTotalPrice() {\n    var sumPrice = 0;\n    productsInCart.forEach(function (product) {\n      sumPrice += product.boughtQuantity * product.price;\n      setTotalPrice(sumPrice);\n    });\n  };\n\n  var exceedQuantity = function exceedQuantity(singleProduct) {\n    console.log('exced', document.getElementById('quantity').value, singleProduct);\n\n    if (document.getElementById('quantity').value > singleProduct.effectiveStock) {\n      document.getElementById('add-to-cart-btn').disabled = true;\n      setDisplayExceedMsg(true);\n    } else {\n      document.getElementById('add-to-cart-btn').disabled = false;\n      setDisplayExceedMsg(false);\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Carrello\"), productsInCart && productsInCart.map(function (product) {\n    return __jsx(\"div\", {\n      key: product._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, product.name), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }, \"Prezzo: \"), \"\\u20AC \", product.price), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    }, \"Subtotale: \"), \"\\u20AC \", product.price * product.boughtQuantity), __jsx(\"input\", {\n      onChange: function onChange() {\n        return updateCart(product, document.getElementById(product._id).value);\n      },\n      type: \"number\",\n      id: product._id,\n      min: \"1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), __jsx(\"button\", {\n      onClick: function onClick() {\n        return removeProduct(product);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"x\"));\n  }), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Total price: \", totalPrice), __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Checkout\"));\n};\n\n_s(Carrello, \"WkxfDK09ouobCDbwPZ2yrmRkXKQ=\");\n\n_c = Carrello;\nexport default Carrello;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carrello\");","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/pages/carrello.js"],"names":["useContext","useEffect","useState","CartContext","Carrello","updateCart","productsInCart","setProductsInCart","totalPrice","setTotalPrice","forEach","product","document","getElementById","_id","value","boughtQuantity","calculateTotalPrice","removeProduct","updateArray","filter","element","sumPrice","price","exceedQuantity","singleProduct","console","log","effectiveStock","disabled","setDisplayExceedMsg","map","name"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport { CartContext } from '../contexts/CartContext'\n\nconst Carrello = () => {\n  const { updateCart, productsInCart, setProductsInCart } = useContext(CartContext)\n  const [totalPrice, setTotalPrice] = useState(0)\n\n  useEffect(() => {\n    productsInCart.forEach(product => {\n      document.getElementById(product._id).value = product.boughtQuantity\n    })\n    calculateTotalPrice()\n  }, [productsInCart])\n\n  const removeProduct = product => {\n    const updateArray = productsInCart.filter(element => {\n      return element._id !== product._id\n    })\n    setProductsInCart(updateArray)\n  }\n\n  const calculateTotalPrice = () => {\n    let sumPrice = 0\n    productsInCart.forEach(product => {\n      sumPrice += product.boughtQuantity * product.price\n      setTotalPrice(sumPrice)\n    })\n  }\n\n  const exceedQuantity = (singleProduct) => {\n    console.log('exced', document.getElementById('quantity').value, singleProduct)\n    if (document.getElementById('quantity').value > singleProduct.effectiveStock) {\n      document.getElementById('add-to-cart-btn').disabled = true\n      setDisplayExceedMsg(true)\n    } else {\n      document.getElementById('add-to-cart-btn').disabled = false\n      setDisplayExceedMsg(false)\n    }\n  }\n\n  return (\n    <div>\n      <h1>Carrello</h1>\n      {productsInCart && productsInCart.map(product => {\n        return (\n          <div key={product._id}>\n            <p>{product.name}</p>\n            <p><strong>Prezzo: </strong>€ {product.price}</p>\n            <p><strong>Subtotale: </strong>€ {product.price * product.boughtQuantity}</p>\n            <input onChange={() => updateCart(product, document.getElementById(product._id).value)} type='number' id={product._id} min='1' />\n            <button onClick={() => removeProduct(product)}>x</button>\n\n          </div>\n        )\n      })}\n      <h2>Total price: {totalPrice}</h2>\n      <button>Checkout</button>\n\n    </div>\n  )\n}\nexport default Carrello\n"]},"metadata":{},"sourceType":"module"}