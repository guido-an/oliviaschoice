{"ast":null,"code":"var _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/pages/user/profilo.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, useState } from 'react';\nimport { UserContext } from '../contexts/UserContext';\nimport axios from 'axios';\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n});\n\nconst Profilo = () => {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    firstName: '',\n    lastName: '',\n    email: ''\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      setShippingInfo(form);\n      createOrder();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createOrder = async () => {\n    const response = await service.post('/create-order', {\n      shippingInfo,\n      totalPrice,\n      paid: false,\n      productsInCart\n    });\n    const orderId = response.data.orderId;\n    localStorage.setItem('orderId', orderId); // So later if the order succeed we can update it to paid: true\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Profilo\"), __jsx(\"form\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: form.firstName,\n    placeholder: \"* Nome\",\n    required: true,\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      firstName: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    value: form.lastName,\n    placeholder: \"* Cognome\",\n    required: true,\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      lastName: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"email\",\n    value: form.email,\n    placeholder: \"* Email\",\n    required: true,\n    onChange: e => setForm(_objectSpread(_objectSpread({}, form), {}, {\n      email: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Profilo;","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/pages/user/profilo.js"],"names":["useContext","useState","UserContext","axios","service","create","baseURL","process","env","APP_API","withCredentials","Profilo","user","form","setForm","firstName","lastName","email","handleSubmit","e","preventDefault","setShippingInfo","createOrder","err","console","log","response","post","shippingInfo","totalPrice","paid","productsInCart","orderId","data","localStorage","setItem","target","value"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react'\nimport { UserContext } from '../contexts/UserContext'\nimport axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n})\n\nconst Profilo = () => {\n  const { user } = useContext(UserContext)\n\n  const [form, setForm] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n  })\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    try {\n      setShippingInfo(form)\n      createOrder()\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  const createOrder = async () => {\n    const response = await service.post('/create-order', {\n      shippingInfo,\n      totalPrice,\n      paid: false,\n      productsInCart\n    })\n    const orderId = response.data.orderId\n    localStorage.setItem('orderId', orderId) // So later if the order succeed we can update it to paid: true\n  }\n\n  return (\n    <div>\n      <h1>Profilo</h1>\n      <form onClick={handleSubmit}>\n        <input type='text' value={form.firstName} placeholder='* Nome' required onChange={(e) => setForm({ ...form, firstName: e.target.value })} />\n        <input type='text' value={form.lastName} placeholder='* Cognome' required onChange={(e) => setForm({ ...form, lastName: e.target.value })} />\n        <input type='email' value={form.email} placeholder='* Email' required onChange={(e) => setForm({ ...form, email: e.target.value })} />\n      </form>\n    </div>\n  )\n}\nexport default Profilo"]},"metadata":{},"sourceType":"module"}