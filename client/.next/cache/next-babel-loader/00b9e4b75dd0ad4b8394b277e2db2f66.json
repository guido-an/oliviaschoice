{"ast":null,"code":"var _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/contexts/UserContext.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useState } from 'react';\nimport axios from 'axios';\nexport const UserContext = /*#__PURE__*/createContext();\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n});\n\nconst UserContextProvider = props => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({});\n\n  const signup = async user => {\n    const data = await service.post('/auth/signup', user);\n    return data;\n  };\n\n  const setAppUser = user => setUser(user);\n\n  const checkIfLoggedIn = async () => {\n    const {\n      data\n    } = await service.get('/auth/loggedin');\n    return data.user;\n  }; // const fetchUser = async () => {\n  //   try {\n  //     const res = await checkIfLoggedIn()\n  //     setUser(res)\n  //   } catch (err) {\n  //     setUser(null)\n  //   }\n  // }\n\n\n  return __jsx(UserContext.Provider, {\n    value: {\n      user,\n      signup,\n      setAppUser,\n      checkIfLoggedIn,\n      fetchUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nUserContextProvider.getInitialProps = async ctx => {\n  const res = await fetch('https://api.github.com/repos/vercel/next.js');\n  const json = await res.json();\n  console.log(json);\n  return {\n    stars: json.stargazers_count\n  };\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/contexts/UserContext.js"],"names":["createContext","useState","axios","UserContext","service","create","baseURL","process","env","APP_API","withCredentials","UserContextProvider","props","user","setUser","signup","data","post","setAppUser","checkIfLoggedIn","get","fetchUser","children","getInitialProps","ctx","res","fetch","json","console","log","stars","stargazers_count"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEP,MAAMI,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADM;AAE3BC,EAAAA,eAAe,EAAE;AAFU,CAAb,CAAhB;;AAKA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AACnC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMc,MAAM,GAAG,MAAMF,IAAN,IAAc;AAC3B,UAAMG,IAAI,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,cAAb,EAA6BJ,IAA7B,CAAnB;AACA,WAAOG,IAAP;AACD,GAHD;;AAKA,QAAME,UAAU,GAAGL,IAAI,IAAIC,OAAO,CAACD,IAAD,CAAlC;;AAEA,QAAMM,eAAe,GAAG,YAAY;AAClC,UAAM;AAAEH,MAAAA;AAAF,QAAW,MAAMZ,OAAO,CAACgB,GAAR,CAAY,gBAAZ,CAAvB;AACA,WAAOJ,IAAI,CAACH,IAAZ;AACD,GAHD,CAVmC,CAenC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAF;AAAQE,MAAAA,MAAR;AAAgBG,MAAAA,UAAhB;AAA4BC,MAAAA,eAA5B;AAA6CE,MAAAA;AAA7C,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACU,QADT,CADF;AAKD,CA7BD;;AA+BAX,mBAAmB,CAACY,eAApB,GAAsC,MAAOC,GAAP,IAAe;AACnD,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO;AAAEG,IAAAA,KAAK,EAAEH,IAAI,CAACI;AAAd,GAAP;AACD,CALD;;AAOA,eAAepB,mBAAf","sourcesContent":["import { createContext, useState } from 'react'\nimport axios from 'axios'\n\nexport const UserContext = createContext()\n\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n})\n\nconst UserContextProvider = props => {\n  const [user, setUser] = useState({})\n\n  const signup = async user => {\n    const data = await service.post('/auth/signup', user)\n    return data\n  }\n\n  const setAppUser = user => setUser(user)\n\n  const checkIfLoggedIn = async () => {\n    const { data } = await service.get('/auth/loggedin')\n    return data.user\n  }\n\n  // const fetchUser = async () => {\n  //   try {\n  //     const res = await checkIfLoggedIn()\n  //     setUser(res)\n  //   } catch (err) {\n  //     setUser(null)\n  //   }\n  // }\n\n  return (\n    <UserContext.Provider value={{ user, signup, setAppUser, checkIfLoggedIn, fetchUser }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nUserContextProvider.getInitialProps = async (ctx) => {\n  const res = await fetch('https://api.github.com/repos/vercel/next.js')\n  const json = await res.json()\n  console.log(json)\n  return { stars: json.stargazers_count }\n}\n\nexport default UserContextProvider\n"]},"metadata":{},"sourceType":"module"}