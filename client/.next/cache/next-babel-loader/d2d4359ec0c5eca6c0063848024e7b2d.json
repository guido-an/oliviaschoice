{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect } from 'react';\nimport { CartContext } from '../contexts/CartContext';\nimport Link from 'next/link';\n\nconst Carrello = () => {\n  let {\n    updateCart,\n    totalPrice,\n    productsInCart,\n    setProductsInCart,\n    calculateTotalPrice\n  } = useContext(CartContext);\n  useEffect(() => {\n    if (!productsInCart) {\n      setProductsInCart(productsInCart = []);\n    }\n\n    productsInCart.forEach(product => {\n      document.getElementById(product._id).value = product.boughtQuantity;\n    });\n    calculateTotalPrice();\n  }, [productsInCart, totalPrice]);\n\n  const removeProduct = product => {\n    const updateArray = productsInCart.filter(element => {\n      return element._id !== product._id;\n    });\n    setProductsInCart(updateArray);\n  };\n\n  const exceedQuantity = singleProduct => {\n    if (document.getElementById(singleProduct._id).value > singleProduct.effectiveStock) {\n      document.getElementById('checkout-btn').disabled = true;\n      document.getElementById(`${singleProduct._id}-msg`).innerHTML = `Sono rimaste ${singleProduct.effectiveStock} unitÃ  di questo prodotto`;\n    } else {\n      document.getElementById('checkout-btn').disabled = false;\n      document.getElementById(`${singleProduct._id}-msg`).innerHTML = '';\n    }\n  };\n\n  const inputUpdate = product => {\n    updateCart(product, document.getElementById(product._id).value);\n    exceedQuantity(product);\n  };\n\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Carrello\"), productsInCart && productsInCart.map(product => {\n    return __jsx(\"div\", {\n      key: product._id\n    }, __jsx(Link, {\n      href: \"/prodotto/[id]\",\n      as: `/prodotto/${encodeURIComponent(product._id)}`\n    }, __jsx(\"p\", null, product.name)), __jsx(\"p\", null, __jsx(\"strong\", null, \"Prezzo: \"), \"\\u20AC \", product.price), __jsx(\"p\", null, __jsx(\"strong\", null, \"Subtotale: \"), \"\\u20AC \", product.price * product.boughtQuantity), __jsx(\"input\", {\n      onChange: () => inputUpdate(product),\n      type: \"number\",\n      id: product._id,\n      min: \"1\"\n    }), __jsx(\"button\", {\n      onClick: () => removeProduct(product)\n    }, \"x\"), __jsx(\"p\", {\n      id: `${product._id}-msg`\n    }));\n  }), totalPrice >= 1 ? __jsx(\"div\", null, __jsx(\"h2\", null, \"Total price: \", totalPrice), __jsx(Link, {\n    href: \"/checkout\"\n  }, __jsx(\"button\", {\n    id: \"checkout-btn\"\n  }, \"Concludi ordine\"))) : __jsx(\"p\", null, \"Non ci sono prodotti nel carrello \", __jsx(Link, {\n    href: \"/\"\n  }, \"Ritorna alla home\")));\n};\n\nexport default Carrello;","map":null,"metadata":{},"sourceType":"module"}