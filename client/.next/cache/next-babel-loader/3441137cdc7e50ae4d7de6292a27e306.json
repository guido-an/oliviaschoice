{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/contexts/ProductContext.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useState } from 'react';\nimport axios from 'axios';\nexport var ProductContext = /*#__PURE__*/createContext();\nvar service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n});\n\nvar ProductContextProvider = function ProductContextProvider(props) {\n  _s();\n\n  var _useState = useState([]),\n      products = _useState[0],\n      setProducts = _useState[1];\n\n  var getProducts = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return service.get(\"\".concat(process.env.APP_API, \"/api/products\"));\n\n            case 2:\n              response = _context.sent;\n              setProducts(products = response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getProducts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getSingleProduct = function getSingleProduct(id) {\n    console.log(id);\n  };\n\n  return __jsx(ProductContext.Provider, {\n    value: {\n      products: products,\n      getProducts: getProducts,\n      getSingleProduct: getSingleProduct\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\n_s(ProductContextProvider, \"/ZAmBmUKriWz3XDcp0xu079Wyow=\");\n\n_c = ProductContextProvider;\nexport default ProductContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductContextProvider\");","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/contexts/ProductContext.js"],"names":["createContext","useState","axios","ProductContext","service","create","baseURL","process","env","APP_API","withCredentials","ProductContextProvider","props","products","setProducts","getProducts","get","response","data","getSingleProduct","id","console","log","children"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,cAAc,gBAAGH,aAAa,EAApC;AAEP,IAAMI,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADM;AAE3BC,EAAAA,eAAe,EAAE;AAFU,CAAb,CAAhB;;AAKA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,KAAK,EAAI;AAAA;;AAAA,kBACRX,QAAQ,CAAC,EAAD,CADA;AAAA,MACjCY,QADiC;AAAA,MACvBC,WADuB;;AAGtC,MAAMC,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKX,OAAO,CAACY,GAAR,WAAeT,OAAO,CAACC,GAAR,CAAYC,OAA3B,mBADL;;AAAA;AACZQ,cAAAA,QADY;AAElBH,cAAAA,WAAW,CAACD,QAAQ,GAAGI,QAAQ,CAACC,IAArB,CAAX;;AAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXH,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAKA,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,EAAE,EAAI;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACD,GAFD;;AAGA,SACE,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEP,MAAAA,QAAQ,EAARA,QAAF;AAAYE,MAAAA,WAAW,EAAXA,WAAZ;AAAyBI,MAAAA,gBAAgB,EAAhBA;AAAzB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACW,QADT,CADF;AAKD,CAhBD;;GAAMZ,sB;;KAAAA,sB;AAkBN,eAAeA,sBAAf","sourcesContent":["import { createContext, useState } from 'react'\nimport axios from 'axios'\n\nexport const ProductContext = createContext()\n\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n})\n\nconst ProductContextProvider = props => {\n  let [products, setProducts] = useState([])\n\n  const getProducts = async () => {\n    const response = await service.get(`${process.env.APP_API}/api/products`)\n    setProducts(products = response.data)\n  }\n\n  const getSingleProduct = id => {\n    console.log(id)\n  }\n  return (\n    <ProductContext.Provider value={{ products, getProducts, getSingleProduct }}>\n      {props.children}\n    </ProductContext.Provider>\n  )\n}\n\nexport default ProductContextProvider\n"]},"metadata":{},"sourceType":"module"}