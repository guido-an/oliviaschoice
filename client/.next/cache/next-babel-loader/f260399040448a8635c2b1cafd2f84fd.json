{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useState } from 'react';\nimport axios from 'axios';\nexport var ProductContext = /*#__PURE__*/createContext();\nvar service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n});\n\nvar ProductContextProvider = function ProductContextProvider(props) {\n  var _useState = useState([]),\n      products = _useState[0],\n      setProducts = _useState[1];\n\n  var _useState2 = useState(null),\n      singleProduct = _useState2[0],\n      setSingleProduct = _useState2[1];\n\n  var getProducts = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return service.get(\"\".concat(process.env.APP_API, \"/api/products\"));\n\n            case 2:\n              response = _context.sent;\n              setProducts(products = response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getProducts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getSingleProduct = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (id) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              _context2.next = 4;\n              return service.get(\"\".concat(process.env.APP_API, \"/api/product/\").concat(id));\n\n            case 4:\n              response = _context2.sent;\n              setSingleProduct(response.data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getSingleProduct(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(ProductContext.Provider, {\n    value: {\n      products: products,\n      getProducts: getProducts,\n      getSingleProduct: getSingleProduct,\n      singleProduct: singleProduct\n    }\n  }, props.children);\n};\n\nexport default ProductContextProvider;","map":null,"metadata":{},"sourceType":"module"}