{"ast":null,"code":"var _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/contexts/UserContext.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useState } from 'react';\nimport axios from 'axios';\nexport const UserContext = /*#__PURE__*/createContext();\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n});\n\nconst UserContextProvider = props => {\n  const {\n    0: user,\n    1: setUser\n  } = useState({});\n\n  const signup = async user => {\n    const data = await service.post('/auth/signup', user);\n    return data;\n  };\n\n  const login = async user => {\n    const data = await service.post('/auth/login', user);\n    return data;\n  };\n\n  const checkIfLoggedIn = async () => {\n    const {\n      data\n    } = await service.get('/auth/loggedin');\n    return data.user;\n  };\n\n  const fetchUser = async () => {\n    try {\n      const res = await checkIfLoggedIn();\n      console.log(res, 'res');\n      setUser(res);\n    } catch (err) {\n      setUser(null);\n    }\n  };\n\n  const getOrders = async () => {\n    try {\n      const res = await service.get('/user/orders');\n      setUser(res.data.user);\n    } catch (err) {\n      setUser(null);\n    }\n  };\n\n  return __jsx(UserContext.Provider, {\n    value: {\n      user,\n      signup,\n      login,\n      setUser,\n      checkIfLoggedIn,\n      fetchUser,\n      getUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default UserContextProvider;","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/contexts/UserContext.js"],"names":["createContext","useState","axios","UserContext","service","create","baseURL","process","env","APP_API","withCredentials","UserContextProvider","props","user","setUser","signup","data","post","login","checkIfLoggedIn","get","fetchUser","res","console","log","err","getOrders","getUser","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEP,MAAMI,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADM;AAE3BC,EAAAA,eAAe,EAAE;AAFU,CAAb,CAAhB;;AAKA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AACnC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMc,MAAM,GAAG,MAAMF,IAAN,IAAc;AAC3B,UAAMG,IAAI,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,cAAb,EAA6BJ,IAA7B,CAAnB;AACA,WAAOG,IAAP;AACD,GAHD;;AAKA,QAAME,KAAK,GAAG,MAAML,IAAN,IAAc;AAC1B,UAAMG,IAAI,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,aAAb,EAA4BJ,IAA5B,CAAnB;AACA,WAAOG,IAAP;AACD,GAHD;;AAKA,QAAMG,eAAe,GAAG,YAAY;AAClC,UAAM;AAAEH,MAAAA;AAAF,QAAW,MAAMZ,OAAO,CAACgB,GAAR,CAAY,gBAAZ,CAAvB;AACA,WAAOJ,IAAI,CAACH,IAAZ;AACD,GAHD;;AAKA,QAAMQ,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMH,eAAe,EAAjC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,KAAjB;AACAR,MAAAA,OAAO,CAACQ,GAAD,CAAP;AACD,KAJD,CAIE,OAAOG,GAAP,EAAY;AACZX,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GARD;;AAUA,QAAMY,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMJ,GAAG,GAAG,MAAMlB,OAAO,CAACgB,GAAR,CAAY,cAAZ,CAAlB;AACAN,MAAAA,OAAO,CAACQ,GAAG,CAACN,IAAJ,CAASH,IAAV,CAAP;AACD,KAHD,CAGE,OAAOY,GAAP,EAAY;AACZX,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GAPD;;AASA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAF;AAAQE,MAAAA,MAAR;AAAgBG,MAAAA,KAAhB;AAAuBJ,MAAAA,OAAvB;AAAgCK,MAAAA,eAAhC;AAAiDE,MAAAA,SAAjD;AAA4DM,MAAAA;AAA5D,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,KAAK,CAACgB,QADT,CADF;AAKD,CA1CD;;AA4CA,eAAejB,mBAAf","sourcesContent":["import { createContext, useState } from 'react'\nimport axios from 'axios'\n\nexport const UserContext = createContext()\n\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n})\n\nconst UserContextProvider = props => {\n  const [user, setUser] = useState({})\n\n  const signup = async user => {\n    const data = await service.post('/auth/signup', user)\n    return data\n  }\n\n  const login = async user => {\n    const data = await service.post('/auth/login', user)\n    return data\n  }\n\n  const checkIfLoggedIn = async () => {\n    const { data } = await service.get('/auth/loggedin')\n    return data.user\n  }\n\n  const fetchUser = async () => {\n    try {\n      const res = await checkIfLoggedIn()\n      console.log(res, 'res')\n      setUser(res)\n    } catch (err) {\n      setUser(null)\n    }\n  }\n\n  const getOrders = async () => {\n    try {\n      const res = await service.get('/user/orders')\n      setUser(res.data.user)\n    } catch (err) {\n      setUser(null)\n    }\n  }\n\n  return (\n    <UserContext.Provider value={{ user, signup, login, setUser, checkIfLoggedIn, fetchUser, getUser }}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n\nexport default UserContextProvider\n"]},"metadata":{},"sourceType":"module"}