{"ast":null,"code":"var _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/pages/prodotto/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useContext, useEffect, useState } from 'react';\nimport { CartContext } from '../../contexts/CartContext';\nimport { ProductContext } from '../../contexts/ProductContext';\n\nconst Product = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query; // Destructuring our router object\n\n  const {\n    addToCart,\n    productsInCart\n  } = useContext(CartContext);\n  const {\n    getSingleProduct,\n    singleProduct\n  } = useContext(ProductContext);\n  const [displayExceedMsg, setDisplayExceedMsg] = false;\n  useEffect(() => {\n    document.getElementById('quantity').value = 1;\n\n    async function fetchProduct() {\n      await getSingleProduct(id);\n    }\n\n    fetchProduct();\n  }, [id]);\n\n  const exceedQuantity = singleProduct => {\n    console.log('exced', document.getElementById('quantity').value, singleProduct);\n\n    if (document.getElementById('quantity').value > singleProduct.effectiveStock) {\n      setDisplayExceedMsg(true);\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Product page\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, singleProduct && singleProduct.name), __jsx(\"input\", {\n    onChange: () => exceedQuantity(singleProduct),\n    id: \"quantity\",\n    type: \"number\",\n    min: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: () => addToCart(singleProduct, document.getElementById('quantity').value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Add to cart\"), displayExceedMsg && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 30\n    }\n  }, \"too much\"));\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/pages/prodotto/[id].js"],"names":["useRouter","useContext","useEffect","useState","CartContext","ProductContext","Product","router","id","query","addToCart","productsInCart","getSingleProduct","singleProduct","displayExceedMsg","setDisplayExceedMsg","document","getElementById","value","fetchProduct","exceedQuantity","console","log","effectiveStock","name"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,cAAT,QAA+B,+BAA/B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB,CAFoB,CAES;;AAC7B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAgCV,UAAU,CAACG,WAAD,CAAhD;AACA,QAAM;AAAEQ,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAsCZ,UAAU,CAACI,cAAD,CAAtD;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0C,KAAhD;AAECb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,GAA4C,CAA5C;;AACC,mBAAeC,YAAf,GAA+B;AAC7B,YAAMP,gBAAgB,CAACJ,EAAD,CAAtB;AACD;;AACDW,IAAAA,YAAY;AACb,GANO,EAML,CAACX,EAAD,CANK,CAAT;;AAQC,QAAMY,cAAc,GAAIP,aAAD,IAAmB;AACxCQ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAAzD,EAAgEL,aAAhE;;AACA,QAAGG,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApC,GAA4CL,aAAa,CAACU,cAA7D,EAA4E;AAC1ER,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,aAAa,IAAIA,aAAa,CAACW,IAAnC,CAFF,EAGE;AAAO,IAAA,QAAQ,EAAE,MAAMJ,cAAc,CAACP,aAAD,CAArC;AAAsD,IAAA,EAAE,EAAC,UAAzD;AAAoE,IAAA,IAAI,EAAC,QAAzE;AAAkF,IAAA,GAAG,EAAC,GAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMH,SAAS,CAACG,aAAD,EAAgBG,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAApD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKGJ,gBAAgB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALvB,CADF;AASD,CA/BH;;AAkCA,eAAeR,OAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useContext, useEffect, useState } from 'react'\nimport { CartContext } from '../../contexts/CartContext'\nimport { ProductContext } from '../../contexts/ProductContext'\n\nconst Product = () => {\n  const router = useRouter();\n  const { id } = router.query; // Destructuring our router object\n  const { addToCart, productsInCart } = useContext(CartContext)\n  const { getSingleProduct, singleProduct } = useContext(ProductContext)\n  const [displayExceedMsg, setDisplayExceedMsg] = false\n\n   useEffect(() => {\n     document.getElementById('quantity').value = 1\n      async function fetchProduct () {\n        await getSingleProduct(id)\n      }\n      fetchProduct()\n    }, [id])\n   \n    const exceedQuantity = (singleProduct) => {\n      console.log('exced', document.getElementById('quantity').value, singleProduct)\n      if(document.getElementById('quantity').value > singleProduct.effectiveStock){\n        setDisplayExceedMsg(true)\n      }\n    }\n    \n    return (\n      <div>\n        <h1>Product page</h1>\n        <p>{singleProduct && singleProduct.name}</p>\n        <input onChange={() => exceedQuantity(singleProduct)} id=\"quantity\" type=\"number\" min=\"0\"></input>\n        <button onClick={() => addToCart(singleProduct, document.getElementById('quantity').value)}>Add to cart</button>\n        {displayExceedMsg && <p>too much</p>}\n      </div>\n    )\n  }\n\n\nexport default Product\n  "]},"metadata":{},"sourceType":"module"}