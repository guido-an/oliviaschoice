{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/pages/carrello.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect, useState } from 'react';\nimport { CartContext } from '../contexts/CartContext';\n\nvar Carrello = function Carrello() {\n  _s();\n\n  var _useContext = useContext(CartContext),\n      updateCart = _useContext.updateCart,\n      productsInCart = _useContext.productsInCart,\n      setProductsInCart = _useContext.setProductsInCart;\n\n  var _useState = useState(0),\n      totalPrice = _useState[0],\n      setTotalPrice = _useState[1];\n\n  var _useState2 = useState(false),\n      displayExceedMsg = _useState2[0],\n      setDisplayExceedMsg = _useState2[1];\n\n  useEffect(function () {\n    productsInCart.forEach(function (product) {\n      document.getElementById(product._id).value = product.boughtQuantity;\n    });\n    calculateTotalPrice();\n  }, [productsInCart]);\n\n  var removeProduct = function removeProduct(product) {\n    var updateArray = productsInCart.filter(function (element) {\n      return element._id !== product._id;\n    });\n    setProductsInCart(updateArray);\n  };\n\n  var calculateTotalPrice = function calculateTotalPrice() {\n    var sumPrice = 0;\n    productsInCart.forEach(function (product) {\n      sumPrice += product.boughtQuantity * product.price;\n      setTotalPrice(sumPrice);\n    });\n  };\n\n  var exceedQuantity = function exceedQuantity(singleProduct) {\n    if (document.getElementById(singleProduct._id).value > singleProduct.effectiveStock) {\n      document.getElementById('checkout-btn').disabled = true;\n      setDisplayExceedMsg(true);\n    } else {\n      document.getElementById('checkout-btn').disabled = false;\n      setDisplayExceedMsg(false);\n    }\n  };\n\n  var cartUpdated = function cartUpdated(product) {\n    updateCart(product, document.getElementById(product._id).value);\n    exceedQuantity(product);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Carrello\"), productsInCart && productsInCart.map(function (product) {\n    return __jsx(\"div\", {\n      key: product._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, product.name), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }, \"Prezzo: \"), \"\\u20AC \", product.price), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    }, \"Subtotale: \"), \"\\u20AC \", product.price * product.boughtQuantity), __jsx(\"input\", {\n      onChange: function onChange() {\n        return cartUpdated(product);\n      },\n      type: \"number\",\n      id: product._id,\n      min: \"1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), __jsx(\"button\", {\n      onClick: function onClick() {\n        return removeProduct(product);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"x\"));\n  }), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Total price: \", totalPrice), __jsx(\"button\", {\n    id: \"checkout-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Checkout\"));\n};\n\n_s(Carrello, \"HxJThWYntZUZB1Ys6fm0aa/1zQw=\");\n\n_c = Carrello;\nexport default Carrello;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carrello\");","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/pages/carrello.js"],"names":["useContext","useEffect","useState","CartContext","Carrello","updateCart","productsInCart","setProductsInCart","totalPrice","setTotalPrice","displayExceedMsg","setDisplayExceedMsg","forEach","product","document","getElementById","_id","value","boughtQuantity","calculateTotalPrice","removeProduct","updateArray","filter","element","sumPrice","price","exceedQuantity","singleProduct","effectiveStock","disabled","cartUpdated","map","name"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport { CartContext } from '../contexts/CartContext'\n\nconst Carrello = () => {\n  const { updateCart, productsInCart, setProductsInCart } = useContext(CartContext)\n  const [totalPrice, setTotalPrice] = useState(0)\n  const [displayExceedMsg, setDisplayExceedMsg] = useState(false)\n\n  useEffect(() => {\n    productsInCart.forEach(product => {\n      document.getElementById(product._id).value = product.boughtQuantity\n    })\n    calculateTotalPrice()\n  }, [productsInCart])\n\n  const removeProduct = product => {\n    const updateArray = productsInCart.filter(element => {\n      return element._id !== product._id\n    })\n    setProductsInCart(updateArray)\n  }\n\n  const calculateTotalPrice = () => {\n    let sumPrice = 0\n    productsInCart.forEach(product => {\n      sumPrice += product.boughtQuantity * product.price\n      setTotalPrice(sumPrice)\n    })\n  }\n\n  const exceedQuantity = (singleProduct) => {\n    if (document.getElementById(singleProduct._id).value > singleProduct.effectiveStock) {\n      document.getElementById('checkout-btn').disabled = true\n      setDisplayExceedMsg(true)\n    } else {\n      document.getElementById('checkout-btn').disabled = false\n      setDisplayExceedMsg(false)\n    }\n  }\n\n  const cartUpdated = (product) => {\n    updateCart(product, document.getElementById(product._id).value)\n    exceedQuantity(product)\n  }\n\n  return (\n    <div>\n      <h1>Carrello</h1>\n      {productsInCart && productsInCart.map(product => {\n        return (\n          <div key={product._id}>\n            <p>{product.name}</p>\n            <p><strong>Prezzo: </strong>€ {product.price}</p>\n            <p><strong>Subtotale: </strong>€ {product.price * product.boughtQuantity}</p>\n            <input onChange={() => cartUpdated(product)} type='number' id={product._id} min='1' />\n            <button onClick={() => removeProduct(product)}>x</button>\n          </div>\n        )\n      })}\n      <h2>Total price: {totalPrice}</h2>\n      <button id='checkout-btn'>Checkout</button>\n    </div>\n  )\n}\nexport default Carrello\n"]},"metadata":{},"sourceType":"module"}