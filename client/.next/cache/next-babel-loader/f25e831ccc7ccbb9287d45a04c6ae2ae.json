{"ast":null,"code":"var _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/pages/carrello.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext, useEffect, useState } from 'react';\nimport { CartContext } from '../contexts/CartContext';\n\nconst Carrello = () => {\n  const {\n    updateCart,\n    productsInCart,\n    setProductsInCart\n  } = useContext(CartContext);\n  const {\n    0: totalPrice,\n    1: setTotalPrice\n  } = useState(0);\n  useEffect(() => {\n    productsInCart.forEach(product => {\n      document.getElementById(product._id).value = product.boughtQuantity;\n    });\n    calculateTotalPrice();\n  }, [productsInCart]);\n\n  const removeProduct = product => {\n    const updateArray = productsInCart.filter(element => {\n      return element._id !== product._id;\n    });\n    setProductsInCart(updateArray);\n  };\n\n  const calculateTotalPrice = () => {\n    let sumPrice = 0;\n    productsInCart.forEach(product => {\n      sumPrice += product.boughtQuantity * product.price;\n      setTotalPrice(sumPrice);\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Carrello\"), productsInCart && productsInCart.map(product => {\n    return __jsx(\"div\", {\n      key: product._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, product.name), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }, \"Prezzo: \"), \"\\u20AC \", product.price), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, \"Subtotale: \"), \"\\u20AC \", product.price * product.boughtQuantity), __jsx(\"input\", {\n      onChange: () => updateCart(product, document.getElementById(product._id).value),\n      type: \"number\",\n      id: product._id,\n      min: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), __jsx(\"button\", {\n      onClick: () => removeProduct(product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"x\"));\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Total price: \", totalPrice));\n};\n\nexport default Carrello;","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/pages/carrello.js"],"names":["useContext","useEffect","useState","CartContext","Carrello","updateCart","productsInCart","setProductsInCart","totalPrice","setTotalPrice","forEach","product","document","getElementById","_id","value","boughtQuantity","calculateTotalPrice","removeProduct","updateArray","filter","element","sumPrice","price","map","name"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,cAAd;AAA8BC,IAAAA;AAA9B,MAAoDP,UAAU,CAACG,WAAD,CAApE;AACA,QAAM;AAAA,OAACK,UAAD;AAAA,OAAaC;AAAb,MAA8BP,QAAQ,CAAC,CAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAACI,OAAf,CAAuBC,OAAO,IAAI;AAChCC,MAAAA,QAAQ,CAACC,cAAT,CAAwBF,OAAO,CAACG,GAAhC,EAAqCC,KAArC,GAA6CJ,OAAO,CAACK,cAArD;AACD,KAFD;AAGAC,IAAAA,mBAAmB;AACpB,GALQ,EAKN,CAACX,cAAD,CALM,CAAT;;AAOA,QAAMY,aAAa,GAAGP,OAAO,IAAI;AAC/B,UAAMQ,WAAW,GAAGb,cAAc,CAACc,MAAf,CAAsBC,OAAO,IAAI;AACnD,aAAOA,OAAO,CAACP,GAAR,KAAgBH,OAAO,CAACG,GAA/B;AACD,KAFmB,CAApB;AAGAP,IAAAA,iBAAiB,CAACY,WAAD,CAAjB;AACD,GALD;;AAOA,QAAMF,mBAAmB,GAAG,MAAM;AAChC,QAAIK,QAAQ,GAAG,CAAf;AACAhB,IAAAA,cAAc,CAACI,OAAf,CAAuBC,OAAO,IAAI;AAChCW,MAAAA,QAAQ,IAAIX,OAAO,CAACK,cAAR,GAAyBL,OAAO,CAACY,KAA7C;AACAd,MAAAA,aAAa,CAACa,QAAD,CAAb;AACD,KAHD;AAID,GAND;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGhB,cAAc,IAAIA,cAAc,CAACkB,GAAf,CAAmBb,OAAO,IAAI;AAC/C,WACE;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACG,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,OAAO,CAACc,IAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,aAA+Bd,OAAO,CAACY,KAAvC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,aAAkCZ,OAAO,CAACY,KAAR,GAAgBZ,OAAO,CAACK,cAA1D,CAHF,EAIE;AAAO,MAAA,QAAQ,EAAE,MAAMX,UAAU,CAACM,OAAD,EAAUC,QAAQ,CAACC,cAAT,CAAwBF,OAAO,CAACG,GAAhC,EAAqCC,KAA/C,CAAjC;AAAwF,MAAA,IAAI,EAAC,QAA7F;AAAsG,MAAA,EAAE,EAAEJ,OAAO,CAACG,GAAlH;AAAuH,MAAA,GAAG,EAAC,GAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAQ,MAAA,OAAO,EAAE,MAAMI,aAAa,CAACP,OAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CADF;AAUD,GAXkB,CAFrB,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBH,UAAlB,CAdF,CADF;AAmBD,CA7CD;;AA8CA,eAAeJ,QAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport { CartContext } from '../contexts/CartContext'\n\nconst Carrello = () => {\n  const { updateCart, productsInCart, setProductsInCart } = useContext(CartContext)\n  const [totalPrice, setTotalPrice] = useState(0)\n\n  useEffect(() => {\n    productsInCart.forEach(product => {\n      document.getElementById(product._id).value = product.boughtQuantity\n    })\n    calculateTotalPrice()\n  }, [productsInCart])\n\n  const removeProduct = product => {\n    const updateArray = productsInCart.filter(element => {\n      return element._id !== product._id\n    })\n    setProductsInCart(updateArray)\n  }\n\n  const calculateTotalPrice = () => {\n    let sumPrice = 0\n    productsInCart.forEach(product => {\n      sumPrice += product.boughtQuantity * product.price\n      setTotalPrice(sumPrice)\n    })\n  }\n\n  return (\n    <div>\n      <h1>Carrello</h1>\n      {productsInCart && productsInCart.map(product => {\n        return (\n          <div key={product._id}>\n            <p>{product.name}</p>\n            <p><strong>Prezzo: </strong>€ {product.price}</p>\n            <p><strong>Subtotale: </strong>€ {product.price * product.boughtQuantity}</p>\n            <input onChange={() => updateCart(product, document.getElementById(product._id).value)} type='number' id={product._id} min='1' />\n            <button onClick={() => removeProduct(product)}>x</button>\n\n          </div>\n        )\n      })}\n      <h2>Total price: {totalPrice}</h2>\n\n    </div>\n  )\n}\nexport default Carrello\n"]},"metadata":{},"sourceType":"module"}