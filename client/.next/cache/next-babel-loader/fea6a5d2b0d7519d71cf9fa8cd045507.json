{"ast":null,"code":"var _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/contexts/CartContext.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nexport const CartContext = /*#__PURE__*/createContext();\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n});\n\nconst CartContextProvider = props => {\n  const {\n    0: productsInCart,\n    1: setProductsInCart\n  } = useState([]);\n  useEffect(() => {\n    const productsFromLocalStorage = JSON.parse(localStorage.getItem('productsInCart'));\n    setProductsInCart(productsFromLocalStorage);\n  }, [productsInCart]);\n\n  const test = () => {\n    localStorage.setItem('productsInCart', JSON.stringify(productsInCart)); // setTimeout(function () {\n    //   console.log('add to local storage', productsInCart)\n    //   localStorage.setItem('productsInCart', JSON.stringify(productsInCart))\n    // }, 3000)\n  };\n\n  const addToCart = async (product, addProductToLocalStorage) => {\n    if (!productsInCart) {\n      setProductsInCart([product]);\n    } else {\n      setProductsInCart([...productsInCart, product]);\n    }\n\n    console.log('add to cart', productsInCart);\n    addProductToLocalStorage(); // localStorage.setItem('productsInCart', JSON.stringify(productsInCart))\n  };\n\n  console.log(productsInCart, 'productsInCart');\n  return __jsx(CartContext.Provider, {\n    value: {\n      productsInCart,\n      addToCart,\n      test\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default CartContextProvider;","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/contexts/CartContext.js"],"names":["createContext","useState","useEffect","axios","CartContext","service","create","baseURL","process","env","APP_API","withCredentials","CartContextProvider","props","productsInCart","setProductsInCart","productsFromLocalStorage","JSON","parse","localStorage","getItem","test","setItem","stringify","addToCart","product","addProductToLocalStorage","console","log","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEP,MAAMK,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADM;AAE3BC,EAAAA,eAAe,EAAE;AAFU,CAAb,CAAhB;;AAKA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AACnC,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCd,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,wBAAwB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAjC;AACAL,IAAAA,iBAAiB,CAACC,wBAAD,CAAjB;AACD,GAHQ,EAGN,CAACF,cAAD,CAHM,CAAT;;AAKA,QAAMO,IAAI,GAAG,MAAM;AACjBF,IAAAA,YAAY,CAACG,OAAb,CAAqB,gBAArB,EAAuCL,IAAI,CAACM,SAAL,CAAeT,cAAf,CAAvC,EADiB,CAEjB;AACA;AACA;AACA;AACD,GAND;;AAQA,QAAMU,SAAS,GAAG,OAAOC,OAAP,EAAgBC,wBAAhB,KAA6C;AAC7D,QAAI,CAACZ,cAAL,EAAqB;AACnBC,MAAAA,iBAAiB,CAAC,CAACU,OAAD,CAAD,CAAjB;AACD,KAFD,MAEO;AACLV,MAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBW,OAApB,CAAD,CAAjB;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bd,cAA3B;AACAY,IAAAA,wBAAwB,GAPqC,CAQ7D;AACD,GATD;;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,cAAZ,EAA4B,gBAA5B;AAEA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEA,MAAAA,cAAF;AAAkBU,MAAAA,SAAlB;AAA6BH,MAAAA;AAA7B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACgB,QADT,CADF;AAKD,CAlCD;;AAoCA,eAAejB,mBAAf","sourcesContent":["import { createContext, useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport const CartContext = createContext()\n\nconst service = axios.create({\n  baseURL: process.env.APP_API,\n  withCredentials: true\n})\n\nconst CartContextProvider = props => {\n  const [productsInCart, setProductsInCart] = useState([])\n\n  useEffect(() => {\n    const productsFromLocalStorage = JSON.parse(localStorage.getItem('productsInCart'))\n    setProductsInCart(productsFromLocalStorage)\n  }, [productsInCart])\n\n  const test = () => {\n    localStorage.setItem('productsInCart', JSON.stringify(productsInCart))\n    // setTimeout(function () {\n    //   console.log('add to local storage', productsInCart)\n    //   localStorage.setItem('productsInCart', JSON.stringify(productsInCart))\n    // }, 3000)\n  }\n\n  const addToCart = async (product, addProductToLocalStorage) => {\n    if (!productsInCart) {\n      setProductsInCart([product])\n    } else {\n      setProductsInCart([...productsInCart, product])\n    }\n    console.log('add to cart', productsInCart)\n    addProductToLocalStorage()\n    // localStorage.setItem('productsInCart', JSON.stringify(productsInCart))\n  }\n\n  console.log(productsInCart, 'productsInCart')\n\n  return (\n    <CartContext.Provider value={{ productsInCart, addToCart, test }}>\n      {props.children}\n    </CartContext.Provider>\n  )\n}\n\nexport default CartContextProvider\n"]},"metadata":{},"sourceType":"module"}