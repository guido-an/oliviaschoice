{"ast":null,"code":"var _jsxFileName = \"/Users/Guido/Desktop/pharmashop/client/pages/prodotto/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useContext, useEffect, useState } from 'react';\nimport { CartContext } from '../../contexts/CartContext';\nimport { ProductContext } from '../../contexts/ProductContext';\n\nconst Product = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query; // Destructuring our router object\n\n  const {\n    addToCart,\n    productsInCart,\n    test\n  } = useContext(CartContext);\n  const {\n    getSingleProduct,\n    singleProduct\n  } = useContext(ProductContext);\n  useEffect(() => {\n    document.getElementById('test').value = 1;\n\n    async function fetchProduct() {\n      await getSingleProduct(id);\n    }\n\n    fetchProduct();\n  }, [id]); // const increaseQuantity = () => {\n  //   setQuantity(quantity++)\n  // }\n  //  const quantity = document.getElementById('test').value\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Product page\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, singleProduct && singleProduct.name), __jsx(\"input\", {\n    id: \"test\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: () => addToCart(singleProduct, document.getElementById('test').value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Add to cart\"));\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/Guido/Desktop/pharmashop/client/pages/prodotto/[id].js"],"names":["useRouter","useContext","useEffect","useState","CartContext","ProductContext","Product","router","id","query","addToCart","productsInCart","test","getSingleProduct","singleProduct","document","getElementById","value","fetchProduct","name"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,cAAT,QAA+B,+BAA/B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB,CAFoB,CAES;;AAC7B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,cAAb;AAA6BC,IAAAA;AAA7B,MAAsCX,UAAU,CAACG,WAAD,CAAtD;AACA,QAAM;AAAES,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAsCb,UAAU,CAACI,cAAD,CAAtD;AAGDH,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,GAAwC,CAAxC;;AACC,mBAAeC,YAAf,GAA+B;AAC7B,YAAML,gBAAgB,CAACL,EAAD,CAAtB;AACD;;AACDU,IAAAA,YAAY;AACb,GANO,EAML,CAACV,EAAD,CANK,CAAT,CAPqB,CAepB;AACA;AAEA;AAEA;;AAGE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIM,aAAa,IAAIA,aAAa,CAACK,IAAnC,CAFF,EAIE;AAAO,IAAA,EAAE,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME;AAAQ,IAAA,OAAO,EAAE,MAAMT,SAAS,CAACI,aAAD,EAAgBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CADF;AAUD,CAjCH;;AAoCA,eAAeX,OAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useContext, useEffect, useState } from 'react'\nimport { CartContext } from '../../contexts/CartContext'\nimport { ProductContext } from '../../contexts/ProductContext'\n\nconst Product = () => {\n  const router = useRouter();\n  const { id } = router.query; // Destructuring our router object\n  const { addToCart, productsInCart, test } = useContext(CartContext)\n  const { getSingleProduct, singleProduct } = useContext(ProductContext)\n\n \n useEffect(() => {\n   document.getElementById('test').value = 1\n    async function fetchProduct () {\n      await getSingleProduct(id)\n    }\n    fetchProduct()\n  }, [id])\n\n  // const increaseQuantity = () => {\n  //   setQuantity(quantity++)\n\n  // }\n      \n  //  const quantity = document.getElementById('test').value\n\n  \n    return (\n      <div>\n        <h1>Product page</h1>\n        <p>{singleProduct && singleProduct.name}</p>\n        {/* <p>{quantity}</p> */}\n        <input id=\"test\" type=\"number\"></input>\n        \n        <button onClick={() => addToCart(singleProduct, document.getElementById('test').value)}>Add to cart</button>\n      </div>\n    )\n  }\n\n\nexport default Product\n  "]},"metadata":{},"sourceType":"module"}